{"version":3,"sources":["GrisCell.js","App.js","serviceWorker.js","index.js"],"names":["GridCell","props","onClick","e","target","parentElement","click","style","value","color","gameEnd","App","GameUpdate","a","axios","get","then","r","data","update","setBool","turn","setMove","move","setGame","board","useState","bool","open","setOpen","openRecords","setOpenRecords","original","b","c","d","f","g","h","i","game","chooseTurn","num","console","log","Clicked","id","x","post","alert","recordsList","setList","showRecords","answer","records","map","v","name","date","className","delete","Modal","aria-labelledby","aria-describedby","onClose","closeAfterTransition","BackdropProps","timeout","Fade","in","document","getElementById","Date","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4ce5f30a.chunk.js","sourcesContent":["import React , {useState} from 'react';\r\n\r\nfunction GridCell(props) {\r\n    return <div onClick={e => {e.target.parentElement.click()}} style={props.value === \"z\" ? {color: \"transparent\"} : {color: \"black\"}} value={props.value}>{props.value}</div>\r\n}\r\n\r\nexport default GridCell;","import React , {useState, useEffect} from 'react';\nimport GridCell from './GrisCell';\nimport './App.css';\nimport axios from 'axios';\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from \"@material-ui/core/Fade\";\n\nlet gameEnd = false;\n\nfunction App() { \n\n  const GameUpdate = async () => {\n      let update = await axios.get(\"http://localhost:3001/v1/game\").then(r => r.data);\n      setBool(!update.turn); setMove(update.move); setGame(update.board);\n  };\n\n  const [bool , setBool] = useState(true);\n\n  const [move , setMove] = useState(0);\n\n  const [open , setOpen] = useState(false);\n\n  const [openRecords , setOpenRecords] = useState(false);\n\n  const original = {a: \"z\", b: \"z\", c: \"z\", \n                    d: \"z\", e: \"z\", f: \"z\", \n                    g: \"z\", h: \"z\", i: \"z\"};\n  \n  const [game , setGame] =  useState(0);\n  const StartGame = game === 0 && axios.get(\"http://localhost:3001/v1/game\").then(r => r.data).then(r => {setGame(r.board)});\n\n  \n  \n  //useEffect(() => {GameUpdate()} , [move]);\n  //setInterval(GameUpdate() , 2000);\n  \n\n  const CheckWin = (target) => {\n      if (\n            game.a === game.b && game.b === game.c && game.a === target||\n            game.d === game.e && game.e === game.f && game.d === target||\n            game.g === game.h && game.h === game.i && game.g === target||\n            game.a === game.d && game.d === game.g && game.a === target||\n            game.b === game.e && game.e === game.h && game.b === target||\n            game.c === game.f && game.f === game.i && game.c === target||\n            game.a === game.e && game.e === game.i && game.a === target||\n            game.c === game.e && game.e === game.g && game.c === target\n         )\n      {\n        gameEnd = true;\n        setOpen(true);\n        \n      }\n\n      else if (game.a !== \"z\" && game.b !== \"z\" && game.c !== \"z\" && game.d !== \"z\" && game.e !== \"z\" && game.f !== \"z\" && game.g !== \"z\" && game.h !== \"z\" && game.i !== \"z\")\n      {alert(\"DRAW\")}\n  }\n\n  const sendWinnerInfo = () => {\n    if(document.getElementById(\"inputWinner\").value)\n    {\n      let data = {name: document.getElementById(\"inputWinner\").value, date: new Date()};\n      axios.post(\"http://localhost:3001/v1/records\" , data);\n    }\n    setOpen(false);\n  };\n\n  const chooseTurn = async (num) => {\n    if (!gameEnd)\n    {\n      const { data } = await axios.get(\"http://localhost:3001/v1/board\");\n      console.log(data);\n      if (data[num])\n        {setMove(data[num].move); setGame(data[num].board); setBool(!data[num].turn);}\n    }\n  }\n\n  const Clicked = (e) => {\n    if (game[e.target.id] === \"z\" && !gameEnd)\n    { \n      if (bool) \n      {\n        let x = game;\n        x[e.target.id] = \"X\";\n        axios.post(\"http://localhost:3001/v1/board\" , {board : x , turn : bool , move : move + 1});\n        setGame(x);\n        setMove(move + 1);\n      }\n\n      else\n      {\n        let x = game;\n        x[e.target.id] = \"O\";\n        axios.post(\"http://localhost:3001/v1/board\" , {board : x , turn : bool , move : move + 1});\n        setGame(x);\n        setMove(move + 1);\n      }\n      setBool(!bool);\n      !gameEnd && CheckWin(game[e.target.id]);\n    }\n  };\n\n  const [recordsList , setList] = useState([]);\n\n  const showRecords = async () => {await axios.get(\"http://localhost:3001/v1/records\").then(r => r.data).then(r => {let answer =  r.records.map(v => {return ` Name: ${v.name} , Date: ${v.date} `}); setList(answer)});};\n  \n  return (\n    <>\n\n    <h1>Tic Tac Toe</h1>\n    <div id=\"controlButtons\"><button className=\"b\" onClick={() => {chooseTurn(move - 1)}}>← Undo</button>\n    <button className=\"b\" onClick={async () => {axios.delete(\"http://localhost:3001/v1/game\");setMove(0); setBool(true); setGame(original); gameEnd = false;}}>New Game</button>\n    <button className=\"b\" onClick={() => {chooseTurn(move + 1)}}>Forward →</button></div>\n    <div className=\"App\">\n      <button className=\"griditem\" id=\"a\" onClick={Clicked}><GridCell value={game.a}/></button><button className=\"griditem\" id=\"b\" onClick={Clicked}><GridCell value={game.b}/></button><button className=\"griditem\" id=\"c\" onClick={Clicked}><GridCell value={game.c} /></button>\n      <button className=\"griditem\" id=\"d\" onClick={Clicked}><GridCell value={game.d}/></button><button className=\"griditem\" id=\"e\" onClick={Clicked}><GridCell value={game.e}/></button><button className=\"griditem\" id=\"f\" onClick={Clicked}><GridCell value={game.f} /></button>\n      <button className=\"griditem\" id=\"g\" onClick={Clicked}><GridCell value={game.g}/></button><button className=\"griditem\" id=\"h\" onClick={Clicked}><GridCell value={game.h}/></button><button className=\"griditem\" id=\"i\" onClick={Clicked}><GridCell value={game.i} /></button>\n    </div>\n    <button className=\"b\" onClick={async () => {showRecords(); setOpenRecords(true)}}>show records</button>\n    <button className=\"b\" onClick={() => {GameUpdate()}}>UPDATE</button>\n    {/* <button className=\"b\" onClick={async () => {alert(JSON.stringify(await axios.get(\"http://localhost:3001/v1/records\").then(r => r.data)))}}>show records</button> */}\n    {/* <button onClick={async () => {alert(JSON.stringify(await axios.get(\"http://localhost:3001/v1/board\").then(r => r.data)))}}>show history</button> */}\n\n    <Modal\n        aria-labelledby=\"hi\"\n        aria-describedby=\"description\" \n        open={open}\n        className={\"modal\"}\n        onClose={() => {setOpen(false)}}\n        closeAfterTransition\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={open}>\n          <div className={\"paper\"}>\n          <h2>Player {bool ? \"O\" : \"X\"} Won!</h2>\n            <p>Please Enter Your Name: </p>\n            <input id={\"inputWinner\"}></input>\n            <button onClick={sendWinnerInfo}>Submit</button>\n          </div>\n        </Fade>\n      </Modal>\n\n      <Modal\n        aria-labelledby=\"hi\"\n        aria-describedby=\"description\" \n        open={openRecords}\n        className={\"modal\"}\n        onClose={() => {setOpenRecords(false)}}\n        closeAfterTransition\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={openRecords}>\n          <div className={\"paper\"}>\n          {recordsList.map((v , i) => {return <div key={i}>{v}</div>})}\n          </div>\n        </Fade>\n      </Modal>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}